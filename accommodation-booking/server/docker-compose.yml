version: '3.4'

services:
  web.bff:
    image: ${DOCKER_REGISTRY-}webbff
    build:
      context: .
      dockerfile: src/ApiGateway/Web.Bff/Dockerfile
    ports:
     - 10000:80

  identity.api:
    image: ${DOCKER_REGISTRY-}identityapi
    build:
      context: .
      dockerfile: src/Services/Identity/Identity.API/Dockerfile
    ports:
    - 11000:80

  identity.db:
    image: postgres:alpine
    restart: always
    environment:
     POSTGRES_USERNAME: postgres
     POSTGRES_PASSWORD: 123456
    volumes:
     - identity-data:/var/lib/postgresql/data
    ports:
     - 21000:5432

  reservations.api:
    image: ${DOCKER_REGISTRY-}reservationsapi
    build:
      context: .
      dockerfile: src/Services/Reservations/Reservations.API/Dockerfile
    ports:
     - 12000:80

  accomodation.api:
    image: ${DOCKER_REGISTRY-}accomodationapi
    build:
      context: .
      dockerfile: src/Services/Accomodation/Dockerfile
    ports:
     - 9000:80
  
  accomodation.db:
    image: mysql
    container_name: mysql
    restart: always
    networks:
     - servers
    ports:
     - 4000:3306
    environment:
     MYSQL_ROOT_PASSWORD: root
     MYSQL_DATABASE: db_accomodation
    volumes:
     database-data:/var/lib/mysql

volumes:
  identity-data:
  database-data:
    name: mysql-database


