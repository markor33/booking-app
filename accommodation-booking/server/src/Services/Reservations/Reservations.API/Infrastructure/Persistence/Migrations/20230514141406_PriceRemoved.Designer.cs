// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReservationsLibrary.Data;

#nullable disable

namespace Reservations.API.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ReservationsDbContext))]
    [Migration("20230514141406_PriceRemoved")]
    partial class PriceRemoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReservationsLibrary.Models.Accommodation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AutoConfirmation")
                        .HasColumnType("boolean");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Accommodations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6dd36b67-30e0-40df-bceb-1d03e29afe28"),
                            AutoConfirmation = true,
                            HostId = new Guid("878962ca-7be7-4cd2-9e27-1963749e19be")
                        },
                        new
                        {
                            Id = new Guid("7bd43bc3-3607-4861-8de3-ac46a639419b"),
                            AutoConfirmation = false,
                            HostId = new Guid("cd241f3d-3641-43d0-9227-bd49f5c4cc20")
                        },
                        new
                        {
                            Id = new Guid("426bb5cd-11c7-4a6b-b69d-a295cf8ad810"),
                            AutoConfirmation = false,
                            HostId = new Guid("1ea0022e-cff0-4256-ba25-2c12cc0dfadc")
                        },
                        new
                        {
                            Id = new Guid("8ae6ed88-2755-4ad8-9a1f-0c64dab88da5"),
                            AutoConfirmation = true,
                            HostId = new Guid("06d65b58-5b3e-4dd3-b886-341ced7d0d51")
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccommodationId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Canceled")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumOfGuests")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ReservationsLibrary.Models.ReservationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccommodationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumOfGuests")
                        .HasColumnType("integer");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.ToTable("ReservationRequests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("09927483-c298-4c0a-8a33-88d92548e12b"),
                            AccommodationId = new Guid("6dd36b67-30e0-40df-bceb-1d03e29afe28"),
                            GuestId = new Guid("0e41276d-8cac-400c-9dcb-0fa771023864"),
                            NumOfGuests = 2,
                            Price = 500,
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("8e39a8d9-cb9d-4d13-804c-a1002ca0964b"),
                            AccommodationId = new Guid("7bd43bc3-3607-4861-8de3-ac46a639419b"),
                            GuestId = new Guid("f07fd2d7-5fcf-45a5-98ea-c9826be346a4"),
                            NumOfGuests = 1,
                            Price = 400,
                            Status = 0
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Reservation", b =>
                {
                    b.HasOne("ReservationsLibrary.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReservationsLibrary.Utils.DateRange", "Period", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("End")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("End");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("Start");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.Navigation("Accommodation");

                    b.Navigation("Period");
                });

            modelBuilder.Entity("ReservationsLibrary.Models.ReservationRequest", b =>
                {
                    b.HasOne("ReservationsLibrary.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReservationsLibrary.Utils.DateRange", "Period", b1 =>
                        {
                            b1.Property<Guid>("ReservationRequestId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("End")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("End");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("Start");

                            b1.HasKey("ReservationRequestId");

                            b1.ToTable("ReservationRequests");

                            b1.WithOwner()
                                .HasForeignKey("ReservationRequestId");

                            b1.HasData(
                                new
                                {
                                    ReservationRequestId = new Guid("09927483-c298-4c0a-8a33-88d92548e12b"),
                                    End = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                                    Start = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                },
                                new
                                {
                                    ReservationRequestId = new Guid("8e39a8d9-cb9d-4d13-804c-a1002ca0964b"),
                                    End = new DateTime(2023, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                                    Start = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                });
                        });

                    b.Navigation("Accommodation");

                    b.Navigation("Period");
                });
#pragma warning restore 612, 618
        }
    }
}
