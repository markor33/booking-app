// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReservationsLibrary.Data;

#nullable disable

namespace Reservations.API.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(ReservationsDbContext))]
    partial class ReservationsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReservationsLibrary.Models.Accommodation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AutoConfirmation")
                        .HasColumnType("boolean");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Accomodations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("131111a6-34cd-46cf-9eec-281b1cc6a311"),
                            AutoConfirmation = true,
                            HostId = new Guid("55a7756f-a328-4ddf-bae8-0c67c63a622e")
                        },
                        new
                        {
                            Id = new Guid("9135606b-dde1-4732-9060-24dc85f69daa"),
                            AutoConfirmation = false,
                            HostId = new Guid("69496110-94f1-442a-bec0-60d7c153a8aa")
                        },
                        new
                        {
                            Id = new Guid("4548347e-9366-4f96-8663-f34d1bfad7bc"),
                            AutoConfirmation = false,
                            HostId = new Guid("d8741974-8d00-4d0e-8b2e-9c28e16edeee")
                        },
                        new
                        {
                            Id = new Guid("0c0a8dec-640a-46a0-baf0-37ee9363603c"),
                            AutoConfirmation = true,
                            HostId = new Guid("cae096ba-f38b-4951-8848-d137a12d547b")
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("94200799-698e-4a9f-9aa7-b6acaab93b14"),
                            Amount = 250f,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("5ac921d1-d75b-4656-8002-86c2e3d689e6"),
                            Amount = 350f,
                            Type = 1
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccommodationId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Canceled")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumOfGuests")
                        .HasColumnType("integer");

                    b.Property<Guid>("PriceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.HasIndex("PriceId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ReservationsLibrary.Models.ReservationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccommodationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumOfGuests")
                        .HasColumnType("integer");

                    b.Property<Guid>("PriceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.HasIndex("PriceId");

                    b.ToTable("ReservationRequests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d6fa6cba-9711-4db9-84e7-aa46c5619331"),
                            AccommodationId = new Guid("131111a6-34cd-46cf-9eec-281b1cc6a311"),
                            GuestId = new Guid("3f3a155b-3fd7-4e75-b3da-9057e1850ffc"),
                            NumOfGuests = 2,
                            PriceId = new Guid("94200799-698e-4a9f-9aa7-b6acaab93b14"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("deb4e537-bf82-446f-841a-5f89ec5d4fe5"),
                            AccommodationId = new Guid("9135606b-dde1-4732-9060-24dc85f69daa"),
                            GuestId = new Guid("739a3a88-1680-49f2-8d57-ba7bb720ab63"),
                            NumOfGuests = 1,
                            PriceId = new Guid("5ac921d1-d75b-4656-8002-86c2e3d689e6"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Reservation", b =>
                {
                    b.HasOne("ReservationsLibrary.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationsLibrary.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReservationsLibrary.Utils.DateRange", "Period", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("End")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("End");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("Start");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.Navigation("Accommodation");

                    b.Navigation("Period");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("ReservationsLibrary.Models.ReservationRequest", b =>
                {
                    b.HasOne("ReservationsLibrary.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationsLibrary.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReservationsLibrary.Utils.DateRange", "Period", b1 =>
                        {
                            b1.Property<Guid>("ReservationRequestId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("End")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("End");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("Start");

                            b1.HasKey("ReservationRequestId");

                            b1.ToTable("ReservationRequests");

                            b1.WithOwner()
                                .HasForeignKey("ReservationRequestId");

                            b1.HasData(
                                new
                                {
                                    ReservationRequestId = new Guid("d6fa6cba-9711-4db9-84e7-aa46c5619331"),
                                    End = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                                    Start = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                },
                                new
                                {
                                    ReservationRequestId = new Guid("deb4e537-bf82-446f-841a-5f89ec5d4fe5"),
                                    End = new DateTime(2023, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                                    Start = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                });
                        });

                    b.Navigation("Accommodation");

                    b.Navigation("Period");

                    b.Navigation("Price");
                });
#pragma warning restore 612, 618
        }
    }
}
