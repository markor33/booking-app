// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ReservationsLibrary.Data;

#nullable disable

namespace ReservationsLibrary.Migrations
{
    [DbContext(typeof(ReservationsDbContext))]
    [Migration("20230508154212_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ReservationsLibrary.Models.Accommodation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("AutoConfirmation")
                        .HasColumnType("boolean");

                    b.Property<Guid>("HostId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Accomodations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f19adfc8-f591-4610-8b47-a17c50562e31"),
                            AutoConfirmation = true,
                            HostId = new Guid("a736791d-2582-4e3f-85c5-3ba7ace7edb6")
                        },
                        new
                        {
                            Id = new Guid("ebbe75b0-11f4-4140-95a9-42cf2fb7b8c0"),
                            AutoConfirmation = false,
                            HostId = new Guid("fffe2bf1-2473-4db4-bdde-0e7d1f125fb2")
                        },
                        new
                        {
                            Id = new Guid("930393b4-cd6c-4106-9eef-fd4ebf03cf0e"),
                            AutoConfirmation = false,
                            HostId = new Guid("c68fed54-5220-4eaf-a944-beff9e859375")
                        },
                        new
                        {
                            Id = new Guid("d8ebaf2e-caf3-4566-a265-1ce7426def45"),
                            AutoConfirmation = true,
                            HostId = new Guid("f71b8747-5b16-4f93-977c-25da98a40fd7")
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<float>("Amount")
                        .HasColumnType("real");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e651c085-7bb1-402b-a73d-d5f0ed71b631"),
                            Amount = 250f,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("555a5103-1290-4c49-b7e2-e23ca36fb4b5"),
                            Amount = 350f,
                            Type = 1
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccommodationId")
                        .HasColumnType("uuid");

                    b.Property<bool>("Canceled")
                        .HasColumnType("boolean");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumOfGuests")
                        .HasColumnType("integer");

                    b.Property<Guid>("PriceId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.HasIndex("PriceId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("ReservationsLibrary.Models.ReservationRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccommodationId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("GuestId")
                        .HasColumnType("uuid");

                    b.Property<int>("NumOfGuests")
                        .HasColumnType("integer");

                    b.Property<Guid>("PriceId")
                        .HasColumnType("uuid");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccommodationId");

                    b.HasIndex("PriceId");

                    b.ToTable("ReservationRequests");

                    b.HasData(
                        new
                        {
                            Id = new Guid("04a23eed-6b83-4312-a86c-149b813ea7bd"),
                            AccommodationId = new Guid("f19adfc8-f591-4610-8b47-a17c50562e31"),
                            GuestId = new Guid("ff36e765-8c9b-4342-afae-b19cf2650008"),
                            NumOfGuests = 2,
                            PriceId = new Guid("e651c085-7bb1-402b-a73d-d5f0ed71b631"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("2bcd34ab-76da-44c2-969d-b1491a6f5d3e"),
                            AccommodationId = new Guid("ebbe75b0-11f4-4140-95a9-42cf2fb7b8c0"),
                            GuestId = new Guid("f90d7f80-6e4c-47b8-b51f-d84c06157b3f"),
                            NumOfGuests = 1,
                            PriceId = new Guid("555a5103-1290-4c49-b7e2-e23ca36fb4b5"),
                            Status = 0
                        });
                });

            modelBuilder.Entity("ReservationsLibrary.Models.Reservation", b =>
                {
                    b.HasOne("ReservationsLibrary.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationsLibrary.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReservationsLibrary.Utils.DateRange", "Period", b1 =>
                        {
                            b1.Property<Guid>("ReservationId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("End")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("End");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("Start");

                            b1.HasKey("ReservationId");

                            b1.ToTable("Reservations");

                            b1.WithOwner()
                                .HasForeignKey("ReservationId");
                        });

                    b.Navigation("Accommodation");

                    b.Navigation("Period");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("ReservationsLibrary.Models.ReservationRequest", b =>
                {
                    b.HasOne("ReservationsLibrary.Models.Accommodation", "Accommodation")
                        .WithMany()
                        .HasForeignKey("AccommodationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReservationsLibrary.Models.Price", "Price")
                        .WithMany()
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("ReservationsLibrary.Utils.DateRange", "Period", b1 =>
                        {
                            b1.Property<Guid>("ReservationRequestId")
                                .HasColumnType("uuid");

                            b1.Property<DateTime>("End")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("End");

                            b1.Property<DateTime>("Start")
                                .HasColumnType("timestamp without time zone")
                                .HasColumnName("Start");

                            b1.HasKey("ReservationRequestId");

                            b1.ToTable("ReservationRequests");

                            b1.WithOwner()
                                .HasForeignKey("ReservationRequestId");

                            b1.HasData(
                                new
                                {
                                    ReservationRequestId = new Guid("04a23eed-6b83-4312-a86c-149b813ea7bd"),
                                    End = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                                    Start = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                },
                                new
                                {
                                    ReservationRequestId = new Guid("2bcd34ab-76da-44c2-969d-b1491a6f5d3e"),
                                    End = new DateTime(2023, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                                    Start = new DateTime(2023, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                                });
                        });

                    b.Navigation("Accommodation");

                    b.Navigation("Period");

                    b.Navigation("Price");
                });
#pragma warning restore 612, 618
        }
    }
}
